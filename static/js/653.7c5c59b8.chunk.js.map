{"version":3,"file":"static/js/653.7c5c59b8.chunk.js","mappings":"oMACA,EAAuB,uB,SCevB,EAXiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,CAAMC,UAAWC,EAAaC,GAAIJ,EAASK,MAAMC,KAAjD,WACE,SAAC,MAAD,KACA,qCAGL,E,wCCbD,EAAsB,oBCmBtB,EAhBe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC7B,OACE,mBAAQN,UAAWC,EAAYM,QAASF,EAAxC,SACGC,GAGN,ECUD,EAhBuB,SAAC,GAAsD,IAApDE,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,oBACxC,OAD2E,EAAdC,SAGzD,SAAC,EAAD,CAAQL,YAAaI,EAArB,oCAIG,SAAC,EAAD,CAAQJ,YAAaG,EAArB,6BACR,E,UCXD,EAA2B,wBAA3B,EAA2D,qBCKrDG,EAAYC,SAASC,eAAe,cA0C1C,EAxCc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYR,EAAe,EAAfA,SAuB3B,OAtBAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACH,WAAbA,EAAIC,MACNJ,GAEH,EAEKT,EAAc,SAAC,GAAe,EAAbc,OACVC,UAAUC,SAASpB,IAC5Ba,GAEH,EAKD,OAHAQ,OAAOC,iBAAiB,UAAWP,GACnCM,OAAOC,iBAAiB,QAASlB,GAE1B,WACLiB,OAAOE,oBAAoB,UAAWR,GACtCM,OAAOE,oBAAoB,QAASnB,EACrC,CACF,GAAE,CAACS,KAEGW,EAAAA,EAAAA,eACL,gBAAKzB,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,SAA+BK,MAGjCK,EAEH,E,SCrCD,EAAyB,wBCyCzB,EApCgB,SAAC,GAAkB,IAAhBe,EAAe,EAAfA,SACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACE,gCACGD,IACC,SAAC,KAAD,CACEE,aAAc7B,EACd8B,UAAU,oBACVC,SAAS,KAGb,mBACEC,GAAG,SACHC,KAAK,YACLC,MAAM,OACNC,OAAO,OACPC,IAAG,wCAAmCX,EAAnC,eACHY,YAAY,IACZC,iBAAe,EACfC,MAAM,UACNC,OAtBc,WAClBZ,GAAa,EACd,EAqBKa,UAAU,MAIjB,E,uCCnCD,EAA0B,2BAA1B,EAA8D,0BAA9D,EAA+F,wBAA/F,EAA+H,yBAA/H,EAAgK,yBAAhK,EAAiM,yBAAjM,EAAoO,2BAApO,EAA0Q,4BAA1Q,EAA6S,wBAA7S,EAA2U,uBC0H3U,EAtGkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEjBV,EAOEU,EAPFV,GACAO,EAMEG,EANFH,MACAI,EAKED,EALFC,OACAC,EAIEF,EAJFE,SACAC,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,aAEF,GAAsCrB,EAAAA,EAAAA,WAAS,GAA/C,eAAOsB,EAAP,KAAoBC,EAApB,KACA,GAAgCvB,EAAAA,EAAAA,UAAS,IAAzC,eAAOD,EAAP,KAAiByB,EAAjB,KACA,GAA8BxB,EAAAA,EAAAA,WAAS,WACrC,IAAMyB,GAAOC,EAAAA,EAAAA,GAAwB,UAGrC,OAFeD,GAAc,IAEfE,MAAK,SAAAX,GAAK,OAAIA,EAAMV,KAAOA,CAAjB,GACzB,IALD,eAAOvB,EAAP,KAAgB6C,EAAhB,MAOAxC,EAAAA,EAAAA,YAAU,YACRyC,EAAAA,EAAAA,IAAUvB,GACPwB,MAAK,SAAAC,GAAG,aAAIP,EAAW,UAACO,EAAI,UAAL,aAAC,EAAQC,IAAxB,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAC5B,IAEJ,IC9CiB+B,EDsEXC,EAAc,WAClBf,GAAe,SAAA/C,GAAK,OAAKA,CAAL,GACrB,EAEK+D,EAASpB,EAAcqB,EAAAA,GAAiBrB,EAAcsB,EAE5D,OACE,+BACE,iBAAKpE,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAeoC,IAAK6B,EAAQG,IAAK7B,KACjD,iBAAKxC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA8BuC,KAC9B,eAAGxC,UAAWC,EAAd,UACG+C,EAAasB,QAAQ,GADxB,KAC4B,SAAC,MAAD,QAE5B,cAAGtE,UAAWC,EAAd,SACG2C,EAAO2B,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAExC,eAAI1E,UAAWC,EAAf,wBACA,cAAGD,UAAWC,EAAd,SAAgC4C,KAChC,gBAAI7C,UAAWC,EAAf,2BAEE,2BC5FO+D,ED4FWjB,EC3Ff,IAAI4B,KAAKX,GACVY,eAAeC,MAAM,KAAKC,MAAM,GAAGJ,KAAK,YD6F5C,iBAAK1E,UAAWC,EAAhB,UACGyB,IACC,UAAC,EAAD,CAAQrB,YAAa4D,EAArB,sBACU,SAAC,MAAD,QAGZ,SAAC,EAAD,CACEvD,QAASA,EACTF,eAzDW,WACrB,IAAM4C,GAAOC,EAAAA,EAAAA,GAAwB,UAC/B0B,EAAS3B,GAAc,GACvB4B,EAAW,CACf/C,GAAAA,EACAO,MAAAA,EACAM,YAAAA,EACAE,aAAAA,GAEIiC,EAAaF,EAAOG,OAAS,EAAhB,kBAAwBH,GAAxB,CAAgCC,IAAY,CAACA,IAEhEG,EAAAA,EAAAA,GAAuB,SAAUF,GACjC1B,GAAW,EACZ,EA6CW9C,oBA3CgB,WAC1B,IAAM2C,GAAOC,EAAAA,EAAAA,GAAwB,UAE/B+B,GADShC,GAAc,IACCiC,QAAO,SAAA1C,GAAK,OAAIA,EAAMV,KAAOA,CAAjB,KAE1CkD,EAAAA,EAAAA,GAAuB,UAAD,OAAeC,IACrC7B,GAAW,EACZ,OAwCQN,IACC,SAAC,EAAD,CAAOnC,WAAYmD,EAAnB,UACE,SAAC,EAAD,CAASvC,SAAUA,aAOhC,EE7FD,EAlBqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOgB,EAAP,KAAc2C,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAxE,EAAAA,EAAAA,YAAU,YACR0E,EAAAA,EAAAA,IAAgBF,GACb9B,MAAK,SAAAC,GAAG,OAAI4B,EAAS5B,EAAb,IACRE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAC0B,KAGF,iCACE,SAAC,EAAD,IACC5C,IAAS,SAAC,EAAD,CAAWA,MAAOA,MAGjC,C,uMClBD+C,EAAAA,EAAAA,SAAAA,QAAyBC,EAAAA,GACzBD,EAAAA,EAAAA,SAAAA,OAAwB,CACtBE,QAASC,EAAAA,IAGX,IAAMC,EAAoB,WACxB,OAAOJ,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,UAAmBtC,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAK4C,OAAb,GAC7C,EAEKC,EAAe,WACnB,OAAOP,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,QAAiBtC,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAKR,MAAb,GAC3C,EAEKsD,EAAyB,SAAAC,GAC7B,IAAMC,EAAU,CACdC,OAAQ,CACNC,MAAOH,IAIX,OAAOT,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,OAAiBK,GAAS3C,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAK4C,OAAb,GACpD,EAEKO,EAAmB,SAAAC,GACvB,IAAMJ,EAAU,CACdC,OAAQ,CACNI,YAAaD,EACbE,QAAS,kBACT,mBAAoB,EACpB,2BAA4B,eAIhC,OAAOhB,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,SAAmBK,GAAS3C,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAK4C,OAAb,GACtD,EAEKP,EAAkB,SAAAxD,GACtB,OAAOyD,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,aAAsB9D,IAAKwB,MAAK,SAAAC,GAAG,OAAIA,EAAIN,IAAR,GACrD,EAUKI,EAAY,SAAAvB,GAChB,OAAOyD,EAAAA,EAAAA,IAAUK,EAAAA,GAAAA,OAAgB9D,IAAKwB,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAK4C,OAAb,GAC/C,C,gLCtDD,IAAML,EAAW,gCACXxB,EAAiB,mCACjB0B,EAAU,mCAEVE,EAAW,CACfY,SAAU,sBACV/D,OAAQ,mBACRgE,OAAQ,eACRC,SAAU,iBACVC,OAAQ,SAAA7E,GAAE,sBAAaA,EAAb,YACV8E,aAAc,SAAA9E,GAAE,sBAAaA,EAAb,EAChB+E,aAAc,SAAA/E,GAAE,sBAAaA,EAAb,aAChBgF,aAAc,SAAAhF,GAAE,sBAAaA,EAAb,cAGZiF,EAAQ,CACZC,OAAQ,SACRC,UAAW,YACXC,OAAQ,SACRC,MAAO,QACPC,YAAa,cACbC,QAAS,UACTC,OAAQ,SACRC,SAAU,WACVC,SAAU,WACVC,QAAS,WAGLC,EAAS,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["webpack://filmoteka/./src/components/BackLink/BackLink.module.scss?9303","components/BackLink/BackLink.jsx","webpack://filmoteka/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/BookmarkButton/BookmarkButton.jsx","webpack://filmoteka/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://filmoteka/./src/components/Trailer/Trailer.module.scss?e876","components/Trailer/Trailer.jsx","webpack://filmoteka/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.jsx","utils/formatting.js","pages/MovieDetails.jsx","services/moviesAPI.js","utils/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__OsH+i\"};","import { FaArrowLeft } from 'react-icons/fa';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './BackLink.module.scss';\n\nconst BackLink = () => {\n  const location = useLocation();\n\n  return (\n    <Link className={styles.link} to={location.state.from}>\n      <FaArrowLeft />\n      <span>Back</span>\n    </Link>\n  );\n};\n\nexport default BackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__W1TTO\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ handleClick, children }) => {\n  return (\n    <button className={styles.btn} onClick={handleClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]).isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\n\nimport Button from 'components/Button';\n\nconst BookmarkButton = ({ addToBookmarks, removeFromBookMarks, isSaved }) => {\n  if (isSaved) {\n    return (\n      <Button handleClick={removeFromBookMarks}>Remove from bookmarks</Button>\n    );\n  }\n\n  return <Button handleClick={addToBookmarks}>Add to bookmarks</Button>;\n};\n\nBookmarkButton.propTypes = {\n  addToBookmarks: PropTypes.func.isRequired,\n  removeFromBookMarks: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default BookmarkButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"modal\":\"Modal_modal__yEgVW\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.scss';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const handleClick = ({ target }) => {\n      if (target.classList.contains(styles.backdrop)) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <div className={styles.backdrop}>\n      <div className={styles.modal}>{children}</div>\n    </div>,\n\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Trailer_loader__TIf7n\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TailSpin } from 'react-loader-spinner';\nimport styles from './Trailer.module.scss';\n\nconst Trailer = ({ movieKey }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const hideSpinner = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <TailSpin\n          wrapperClass={styles.loader}\n          ariaLabel=\"tail-spin-loading\"\n          visible={true}\n        />\n      )}\n      <iframe\n        id=\"player\"\n        type=\"text/html\"\n        width=\"100%\"\n        height=\"100%\"\n        src={`https://www.youtube.com/embed/${movieKey}?autoplay=1`}\n        frameBorder=\"0\"\n        allowFullScreen\n        title=\"trailer\"\n        onLoad={hideSpinner}\n        controls={false}\n      ></iframe>\n    </>\n  );\n};\n\nTrailer.propTypes = {\n  movieKey: PropTypes.string.isRequired,\n};\n\nexport default Trailer;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__qdGM5\",\"poster\":\"MovieInfo_poster__o3Om9\",\"info\":\"MovieInfo_info__B2aDT\",\"title\":\"MovieInfo_title__JGFhj\",\"score\":\"MovieInfo_score__ULA9v\",\"genre\":\"MovieInfo_genre__1LAX7\",\"heading\":\"MovieInfo_heading__UdnJ0\",\"overview\":\"MovieInfo_overview__fAKQx\",\"date\":\"MovieInfo_date__XlMx1\",\"box\":\"MovieInfo_box__hSEkE\"};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AiFillStar } from 'react-icons/ai';\nimport { BsPlayCircle } from 'react-icons/bs';\nimport Button from 'components/Button';\nimport BookmarkButton from 'components/BookmarkButton';\nimport Modal from 'components/Modal';\nimport Trailer from 'components/Trailer';\n\nimport { getVideos } from 'services/moviesAPI';\nimport { IMAGE_BASE_URL } from 'utils/constants';\nimport { formatDate } from 'utils/formatting';\nimport {\n  getDataFromLocalStorage,\n  saveDataToLocalStorage,\n} from 'services/localStorage';\n\nimport imagePlaceHolder from 'assets/images/image-place-holder.png';\nimport styles from './MovieInfo.module.scss';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    id,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [movieKey, setMovieKey] = useState('');\n  const [isSaved, setIsSaved] = useState(() => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n\n    return movies.some(movie => movie.id === id);\n  });\n\n  useEffect(() => {\n    getVideos(id)\n      .then(res => setMovieKey(res[0]?.key))\n      .catch(err => console.log(err));\n  }, [id]);\n\n  const addToBookmarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const newMovie = {\n      id,\n      title,\n      poster_path,\n      vote_average,\n    };\n    const newMoviest = movies.length > 0 ? [...movies, newMovie] : [newMovie];\n\n    saveDataToLocalStorage('movies', newMoviest);\n    setIsSaved(true);\n  };\n\n  const removeFromBookMarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const filteredMovies = movies.filter(movie => movie.id !== id);\n\n    saveDataToLocalStorage('movies', [...filteredMovies]);\n    setIsSaved(false);\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(state => !state);\n  };\n\n  const imgUrl = poster_path ? IMAGE_BASE_URL + poster_path : imagePlaceHolder;\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <img className={styles.poster} src={imgUrl} alt={title} />\n        <div className={styles.info}>\n          <h1 className={styles.title}>{title}</h1>\n          <p className={styles.score}>\n            {vote_average.toFixed(1)} <AiFillStar />\n          </p>\n          <p className={styles.genre}>\n            {genres.map(genre => genre.name).join(', ')}\n          </p>\n          <h2 className={styles.heading}>Overview:</h2>\n          <p className={styles.overview}>{overview}</p>\n          <h2 className={styles.date}>\n            Release date:\n            <span>{formatDate(release_date)}</span>\n          </h2>\n\n          <div className={styles.box}>\n            {movieKey && (\n              <Button handleClick={toggleModal}>\n                Trailer <BsPlayCircle />\n              </Button>\n            )}\n            <BookmarkButton\n              isSaved={isSaved}\n              addToBookmarks={addToBookmarks}\n              removeFromBookMarks={removeFromBookMarks}\n            />\n          </div>\n\n          {isModalOpen && (\n            <Modal closeModal={toggleModal}>\n              <Trailer movieKey={movieKey} />\n            </Modal>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","const formatDate = releaseDate => {\n  const date = new Date(releaseDate);\n  return date.toDateString().split(' ').slice(1).join(' ');\n};\n\nexport { formatDate };\n","import BackLink from 'components/BackLink';\nimport MovieInfo from './../components/MovieInfo/MovieInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesAPI';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(res => setMovie(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink />\n      {movie && <MovieInfo movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY, RESOURCE } from 'utils/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getTrendingMovies = () => {\n  return axios.get(RESOURCE.trending).then(res => res.data.results);\n};\n\nconst getGenreList = () => {\n  return axios.get(RESOURCE.genres).then(res => res.data.genres);\n};\n\nconst getMoviesBySearchQuery = searchQuery => {\n  const options = {\n    params: {\n      query: searchQuery,\n    },\n  };\n\n  return axios.get(RESOURCE.search, options).then(res => res.data.results);\n};\n\nconst getMoviesByGenre = genreId => {\n  const options = {\n    params: {\n      with_genres: genreId,\n      sort_by: 'popularity.desc',\n      'vote_average.gte': 5,\n      'primary_release_date.gte': '2010-01-01',\n    },\n  };\n\n  return axios.get(RESOURCE.discover, options).then(res => res.data.results);\n};\n\nconst getMovieDetails = id => {\n  return axios.get(RESOURCE.movieDetails(id)).then(res => res.data);\n};\n\nconst getMovieCredits = id => {\n  return axios.get(RESOURCE.movieCredits(id)).then(res => res.data.cast);\n};\n\nconst getMovieReviews = id => {\n  return axios.get(RESOURCE.movieReviews(id)).then(res => res.data.results);\n};\n\nconst getVideos = id => {\n  return axios.get(RESOURCE.videos(id)).then(res => res.data.results);\n};\n\nexport {\n  getTrendingMovies,\n  getGenreList,\n  getMoviesBySearchQuery,\n  getMoviesByGenre,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getVideos,\n};\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\nconst API_KEY = '9e68854d69dbd1100bcb425bc2f51530';\n\nconst RESOURCE = {\n  trending: 'trending/movie/week',\n  genres: 'genre/movie/list',\n  search: 'search/movie',\n  discover: 'discover/movie',\n  videos: id => `movie/${id}/videos`,\n  movieDetails: id => `movie/${id}`,\n  movieCredits: id => `movie/${id}/credits`,\n  movieReviews: id => `movie/${id}/reviews`,\n};\n\nconst GENRE = {\n  ACTION: 'action',\n  ANIMATION: 'animation',\n  COMEDY: 'comedy',\n  CRIME: 'crime',\n  DOCUMENTARY: 'documentary',\n  FANTASY: 'fantasy',\n  HORROR: 'horror',\n  THRILLER: 'thriller',\n  TRENDING: 'trending',\n  WESTERN: 'western',\n};\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nexport { BASE_URL, IMAGE_BASE_URL, API_KEY, RESOURCE, GENRE, STATUS };\n"],"names":["location","useLocation","className","styles","to","state","from","handleClick","children","onClick","addToBookmarks","removeFromBookMarks","isSaved","modalRoot","document","getElementById","closeModal","useEffect","handleKeyDown","evt","code","target","classList","contains","window","addEventListener","removeEventListener","createPortal","movieKey","useState","isLoading","setIsLoading","wrapperClass","ariaLabel","visible","id","type","width","height","src","frameBorder","allowFullScreen","title","onLoad","controls","movie","genres","overview","poster_path","release_date","vote_average","isModalOpen","setIsModalOpen","setMovieKey","data","getDataFromLocalStorage","some","setIsSaved","getVideos","then","res","key","catch","err","console","log","releaseDate","toggleModal","imgUrl","IMAGE_BASE_URL","imagePlaceHolder","alt","toFixed","map","genre","name","join","Date","toDateString","split","slice","movies","newMovie","newMoviest","length","saveDataToLocalStorage","filteredMovies","filter","setMovie","movieId","useParams","getMovieDetails","axios","BASE_URL","api_key","API_KEY","getTrendingMovies","RESOURCE","results","getGenreList","getMoviesBySearchQuery","searchQuery","options","params","query","getMoviesByGenre","genreId","with_genres","sort_by","trending","search","discover","videos","movieDetails","movieCredits","movieReviews","GENRE","ACTION","ANIMATION","COMEDY","CRIME","DOCUMENTARY","FANTASY","HORROR","THRILLER","TRENDING","WESTERN","STATUS","IDLE","PENDING","REJECTED","RESOLVED"],"sourceRoot":""}