{"version":3,"file":"static/js/832.4650c401.chunk.js","mappings":"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","sources":["webpack://filmoteka/./src/components/BackLink/BackLink.module.scss?9303","components/BackLink/BackLink.jsx","components/BookmarkButton/BookmarkButton.jsx","webpack://filmoteka/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://filmoteka/./src/components/Trailer/Trailer.module.scss?e876","components/Trailer/Trailer.jsx","webpack://filmoteka/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/moviesAPI.js","utils/formatting.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__OsH+i\"};","import { useTranslation } from 'react-i18next';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './BackLink.module.scss';\n\nconst BackLink = () => {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <Link className={styles.link} to={location.state?.from || '/'}>\n      <FaArrowLeft />\n      <span>{t('common.backLink')}</span>\n    </Link>\n  );\n};\n\nexport default BackLink;\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\n\nconst BookmarkButton = ({ addToBookmarks, removeFromBookMarks, isSaved }) => {\n  const { t } = useTranslation();\n\n  if (isSaved) {\n    return (\n      <Button handleClick={removeFromBookMarks}>\n        {t('movieDetails.bookmarkBtn.remove')}\n      </Button>\n    );\n  }\n\n  return (\n    <Button handleClick={addToBookmarks}>\n      {t('movieDetails.bookmarkBtn.add')}{' '}\n    </Button>\n  );\n};\n\nBookmarkButton.propTypes = {\n  addToBookmarks: PropTypes.func.isRequired,\n  removeFromBookMarks: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default BookmarkButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"modal\":\"Modal_modal__yEgVW\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.scss';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    // closing the modal window after pressing Escape\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const handleClick = ({ target }) => {\n      if (target.classList.contains(styles.backdrop)) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    // removing event listeners after unmounting\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <div className={styles.backdrop}>\n      <div className={styles.modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Trailer_loader__TIf7n\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TailSpin } from 'react-loader-spinner';\nimport styles from './Trailer.module.scss';\n\nconst Trailer = ({ movieKey }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const hideSpinner = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <TailSpin\n          wrapperClass={styles.loader}\n          ariaLabel=\"tail-spin-loading\"\n          visible={true}\n        />\n      )}\n      <iframe\n        id=\"player\"\n        type=\"text/html\"\n        width=\"100%\"\n        height=\"100%\"\n        src={`https://www.youtube.com/embed/${movieKey}?autoplay=1`}\n        frameBorder=\"0\"\n        allowFullScreen\n        title=\"trailer\"\n        onLoad={hideSpinner}\n        controls={false}\n      ></iframe>\n    </>\n  );\n};\n\nTrailer.propTypes = {\n  movieKey: PropTypes.string.isRequired,\n};\n\nexport default Trailer;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__qdGM5\",\"poster\":\"MovieInfo_poster__o3Om9\",\"info\":\"MovieInfo_info__B2aDT\",\"title\":\"MovieInfo_title__JGFhj\",\"score\":\"MovieInfo_score__ULA9v\",\"genre\":\"MovieInfo_genre__1LAX7\",\"heading\":\"MovieInfo_heading__UdnJ0\",\"overview\":\"MovieInfo_overview__fAKQx\",\"date\":\"MovieInfo_date__XlMx1\",\"box\":\"MovieInfo_box__hSEkE\",\"additionalInfo\":\"MovieInfo_additionalInfo__9ZOeg\",\"links\":\"MovieInfo_links__rDs79\",\"link\":\"MovieInfo_link__kwMHd\"};","import { useState, useEffect, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\nimport BookmarkButton from 'components/BookmarkButton';\nimport Modal from 'components/Modal';\nimport Trailer from 'components/Trailer';\nimport PageLoader from 'components/PageLoader';\n\nimport { getVideos } from 'services/moviesAPI';\nimport { IMAGE_BASE_URL } from 'utils/constants';\nimport { formatDate } from 'utils/formatting';\nimport {\n  getDataFromLocalStorage,\n  saveDataToLocalStorage,\n} from 'services/localStorage';\n\nimport { AiFillStar } from 'react-icons/ai';\nimport { BsPlayCircle } from 'react-icons/bs';\nimport imagePlaceHolder from 'assets/images/image-place-holder.png';\nimport styles from './MovieInfo.module.scss';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    id,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [movieKey, setMovieKey] = useState('');\n  const [isSaved, setIsSaved] = useState(() => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n\n    return movies.some(movie => movie.id === id);\n  });\n\n  const location = useLocation();\n  const {\n    t,\n    i18n: { language },\n  } = useTranslation();\n\n  // fetching data\n  useEffect(() => {\n    getVideos(id, language)\n      .then(res => setMovieKey(res[0]?.key))\n      .catch(err => console.log(err));\n  }, [id, language]);\n\n  // adding a movie to the Bookmarks\n  const addToBookmarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const newMovie = {\n      id,\n      title,\n      poster_path,\n      vote_average,\n    };\n    const newMoviest = movies.length > 0 ? [...movies, newMovie] : [newMovie];\n\n    saveDataToLocalStorage('movies', newMoviest);\n    setIsSaved(true);\n  };\n\n  // adding a movie from the Bookmarks\n  const removeFromBookMarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const filteredMovies = movies.filter(movie => movie.id !== id);\n\n    saveDataToLocalStorage('movies', [...filteredMovies]);\n    setIsSaved(false);\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(state => !state);\n  };\n\n  const imgUrl = poster_path ? IMAGE_BASE_URL + poster_path : imagePlaceHolder;\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <img className={styles.poster} src={imgUrl} alt={title} />\n        <div className={styles.info}>\n          <h1 className={styles.title}>{title}</h1>\n          <p className={styles.score}>\n            {vote_average.toFixed(1)} <AiFillStar />\n          </p>\n          <p className={styles.genre}>\n            {genres.map(genre => genre.name).join(', ')}\n          </p>\n          <h2 className={styles.heading}>{t('movieDetails.overview')}:</h2>\n          <p className={styles.overview}>{overview}</p>\n          <h2 className={styles.date}>\n            {t('movieDetails.releaseDate')}:\n            <span>{formatDate(release_date)}</span>\n          </h2>\n\n          <div className={styles.box}>\n            {movieKey && (\n              <Button handleClick={toggleModal}>\n                {t('movieDetails.trailer')} <BsPlayCircle />\n              </Button>\n            )}\n            <BookmarkButton\n              isSaved={isSaved}\n              addToBookmarks={addToBookmarks}\n              removeFromBookMarks={removeFromBookMarks}\n            />\n          </div>\n\n          {isModalOpen && (\n            <Modal closeModal={toggleModal}>\n              <Trailer movieKey={movieKey} />\n            </Modal>\n          )}\n        </div>\n      </div>\n      <div className={styles.additionalInfo}>\n        <h2 className={styles.heading}>{t('movieDetails.additionalInfo')}:</h2>\n        <ul className={styles.links}>\n          <li>\n            <NavLink\n              className={styles.link}\n              to=\"cast\"\n              state={{ from: location.state?.from }}\n            >\n              {t('cast.title')}\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className={styles.link}\n              to=\"reviews\"\n              state={{ from: location.state?.from }}\n            >\n              {t('reviews.title')}\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<PageLoader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesAPI';\nimport { useTranslation } from 'react-i18next';\n\nimport BackLink from 'components/BackLink';\nimport MovieInfo from 'components/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const {\n    i18n: { language },\n  } = useTranslation();\n\n  useEffect(() => {\n    getMovieDetails(movieId, language)\n      .then(res => setMovie(res))\n      .catch(err => console.log(err));\n  }, [movieId, language]);\n\n  return (\n    <>\n      <BackLink />\n      {movie && <MovieInfo movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY, RESOURCE } from 'utils/constants';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getTrendingMovies = (language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get(RESOURCE.trending, options).then(res => res.data.results);\n};\n\nconst getGenreList = (language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get(RESOURCE.genres, options).then(res => res.data.genres);\n};\n\nconst getMoviesBySearchQuery = (query, language = 'en') => {\n  const options = {\n    params: { query, language },\n  };\n  return axios.get(RESOURCE.search, options).then(res => res.data.results);\n};\n\nconst getMoviesByGenre = (genreId, language = 'en') => {\n  const options = {\n    params: {\n      with_genres: genreId,\n      sort_by: 'popularity.desc',\n      'vote_average.gte': 5,\n      'primary_release_date.gte': '2010-01-01',\n      language,\n    },\n  };\n\n  return axios.get(RESOURCE.discover, options).then(res => res.data.results);\n};\n\nconst getMovieDetails = (id, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n\n  return axios.get(RESOURCE.movieDetails(id), options).then(res => res.data);\n};\n\nconst getMovieCredits = (id, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios\n    .get(RESOURCE.movieCredits(id), options)\n    .then(res => res.data.cast);\n};\n\nconst getMovieReviews = (id, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios\n    .get(RESOURCE.movieReviews(id), options)\n    .then(res => res.data.results);\n};\n\nconst getVideos = (id, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get(RESOURCE.videos(id), options).then(res => res.data.results);\n};\n\nexport {\n  getTrendingMovies,\n  getGenreList,\n  getMoviesBySearchQuery,\n  getMoviesByGenre,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getVideos,\n};\n","const formatDate = releaseDate => {\n  const date = new Date(releaseDate);\n  const formattedDate = date\n    .toLocaleString()\n    .split(',')\n    .slice(0, 1)\n    .toString()\n    .replaceAll('/', '.');\n  const dateElements = formattedDate.split('.');\n\n  return dateElements.map(el => el.padStart(2, '0')).join('.');\n};\n\nconst cutString = str => {\n  return str.split(' ').slice(0, 70).join(' ') + '... ';\n};\n\nexport { formatDate, cutString };\n"],"names":["location","useLocation","t","useTranslation","className","styles","to","state","from","addToBookmarks","removeFromBookMarks","isSaved","Button","handleClick","modalRoot","document","getElementById","closeModal","children","useEffect","handleKeyDown","evt","code","target","classList","contains","window","addEventListener","removeEventListener","createPortal","movieKey","useState","isLoading","setIsLoading","wrapperClass","ariaLabel","visible","id","type","width","height","src","frameBorder","allowFullScreen","title","onLoad","controls","movie","genres","overview","poster_path","release_date","vote_average","isModalOpen","setIsModalOpen","setMovieKey","data","getDataFromLocalStorage","some","setIsSaved","language","i18n","getVideos","then","res","key","catch","err","console","log","toggleModal","imgUrl","IMAGE_BASE_URL","imagePlaceHolder","alt","toFixed","map","genre","name","join","formatDate","movies","newMovie","newMoviest","length","saveDataToLocalStorage","filteredMovies","filter","Suspense","fallback","PageLoader","setMovie","movieId","useParams","getMovieDetails","axios","BASE_URL","api_key","API_KEY","getTrendingMovies","options","params","RESOURCE","results","getGenreList","getMoviesBySearchQuery","query","getMoviesByGenre","genreId","with_genres","sort_by","getMovieCredits","cast","getMovieReviews","releaseDate","Date","toLocaleString","split","slice","toString","replaceAll","el","padStart","cutString","str"],"sourceRoot":""}