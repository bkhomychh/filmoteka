{"version":3,"file":"static/js/801.c8fef903.chunk.js","mappings":"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","sources":["webpack://filmoteka/./src/components/BackLink/BackLink.module.scss?9303","components/BackLink/BackLink.jsx","webpack://filmoteka/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/BookmarkButton/BookmarkButton.jsx","webpack://filmoteka/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://filmoteka/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.jsx","utils/formatting.js","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__OsH+i\"};","import { FaArrowLeft } from 'react-icons/fa';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './BackLink.module.scss';\n\nconst BackLink = () => {\n  const location = useLocation();\n\n  return (\n    <Link className={styles.link} to={location.state.from}>\n      <FaArrowLeft />\n      <span>Back</span>\n    </Link>\n  );\n};\n\nexport default BackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__W1TTO\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ handleClick, children }) => {\n  return (\n    <button className={styles.btn} onClick={handleClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]).isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\n\nimport Button from 'components/Button';\n\nconst BookmarkButton = ({ addToBookmarks, removeFromBookMarks, isSaved }) => {\n  if (isSaved) {\n    return (\n      <Button handleClick={removeFromBookMarks}>Remove from bookmarks</Button>\n    );\n  }\n\n  return <Button handleClick={addToBookmarks}>Add to bookmarks</Button>;\n};\n\nBookmarkButton.propTypes = {\n  id: PropTypes.number,\n};\n\nexport default BookmarkButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"modal\":\"Modal_modal__yEgVW\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.scss';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const handleClick = ({ target }) => {\n      if (target.classList.contains(styles.backdrop)) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <div className={styles.backdrop}>\n      <div className={styles.modal}>{children}</div>\n    </div>,\n\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__qdGM5\",\"poster\":\"MovieInfo_poster__o3Om9\",\"info\":\"MovieInfo_info__B2aDT\",\"title\":\"MovieInfo_title__JGFhj\",\"score\":\"MovieInfo_score__ULA9v\",\"genre\":\"MovieInfo_genre__1LAX7\",\"heading\":\"MovieInfo_heading__UdnJ0\",\"overview\":\"MovieInfo_overview__fAKQx\",\"date\":\"MovieInfo_date__XlMx1\",\"box\":\"MovieInfo_box__hSEkE\"};","import { useState, useEffect } from 'react';\nimport { AiFillStar } from 'react-icons/ai';\nimport { BsPlayCircle } from 'react-icons/bs';\n\nimport Button from 'components/Button';\nimport BookmarkButton from 'components/BookmarkButton';\nimport Modal from 'components/Modal';\n\nimport { getVideos } from 'services/moviesAPI';\nimport { IMAGE_BASE_URL } from 'utils/constants';\nimport { formatDate } from 'utils/formatting';\nimport {\n  getDataFromLocalStorage,\n  saveDataToLocalStorage,\n} from 'services/localStorage';\n\nimport styles from './MovieInfo.module.scss';\nimport imagePlaceHolder from 'assets/images/image-place-holder.png';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    id,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [movieKey, setMovieKey] = useState('');\n  const [isSaved, setIsSaved] = useState(() => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n\n    return movies.some(movie => movie.id === id);\n  });\n\n  useEffect(() => {\n    getVideos(id)\n      .then(res => setMovieKey(res[0]?.key))\n      .catch(err => console.log(err));\n  }, [id]);\n\n  const addToBookmarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const newMovie = {\n      id,\n      title,\n      poster_path,\n      vote_average,\n    };\n    const newMoviest = movies.length > 0 ? [...movies, newMovie] : [newMovie];\n\n    saveDataToLocalStorage('movies', newMoviest);\n    setIsSaved(true);\n  };\n\n  const removeFromBookMarks = () => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = data ? data : [];\n    const filteredMovies = movies.filter(movie => movie.id !== id);\n\n    saveDataToLocalStorage('movies', [...filteredMovies]);\n    setIsSaved(false);\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(state => !state);\n  };\n\n  const imgUrl = poster_path ? IMAGE_BASE_URL + poster_path : imagePlaceHolder;\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <img className={styles.poster} src={imgUrl} alt={title} />\n        <div className={styles.info}>\n          <h1 className={styles.title}>{title}</h1>\n          <p className={styles.score}>\n            {vote_average.toFixed(1)} <AiFillStar />\n          </p>\n          <p className={styles.genre}>\n            {genres.map(genre => genre.name).join(', ')}\n          </p>\n          <h2 className={styles.heading}>Overview:</h2>\n          <p className={styles.overview}>{overview}</p>\n          <h2 className={styles.date}>\n            Release date:\n            <span>{formatDate(release_date)}</span>\n          </h2>\n\n          <div className={styles.box}>\n            {movieKey && (\n              <Button handleClick={toggleModal}>\n                Trailer <BsPlayCircle />\n              </Button>\n            )}\n            <BookmarkButton\n              isSaved={isSaved}\n              addToBookmarks={addToBookmarks}\n              removeFromBookMarks={removeFromBookMarks}\n            />\n          </div>\n\n          {isModalOpen && (\n            <Modal closeModal={toggleModal}>\n              <iframe\n                id=\"player\"\n                type=\"text/html\"\n                width=\"100%\"\n                height=\"100%\"\n                src={`https://www.youtube.com/embed/${movieKey}?autoplay=1`}\n                frameBorder=\"0\"\n                allowFullScreen\n                title=\"trailer\"\n              ></iframe>\n            </Modal>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieInfo;\n","const formatDate = releaseDate => {\n  const date = new Date(releaseDate);\n  return date.toDateString().split(' ').slice(1).join(' ');\n};\n\nexport { formatDate };\n","import BackLink from 'components/BackLink';\nimport MovieInfo from './../components/MovieInfo/MovieInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesAPI';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(res => setMovie(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink />\n      {movie && <MovieInfo movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["location","useLocation","className","styles","to","state","from","handleClick","children","onClick","addToBookmarks","removeFromBookMarks","isSaved","modalRoot","document","getElementById","closeModal","useEffect","handleKeyDown","evt","code","target","classList","contains","window","addEventListener","removeEventListener","createPortal","movie","id","title","genres","overview","poster_path","release_date","vote_average","useState","isModalOpen","setIsModalOpen","movieKey","setMovieKey","data","getDataFromLocalStorage","some","setIsSaved","getVideos","then","res","key","catch","err","console","log","releaseDate","toggleModal","imgUrl","IMAGE_BASE_URL","imagePlaceHolder","src","alt","toFixed","map","genre","name","join","Date","toDateString","split","slice","movies","newMovie","newMoviest","length","saveDataToLocalStorage","filteredMovies","filter","type","width","height","frameBorder","allowFullScreen","setMovie","movieId","useParams","getMovieDetails"],"sourceRoot":""}