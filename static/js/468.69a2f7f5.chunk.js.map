{"version":3,"file":"static/js/468.69a2f7f5.chunk.js","mappings":"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","sources":["webpack://filmoteka/./src/components/BackLink/BackLink.module.scss?9303","components/BackLink/BackLink.tsx","components/BookmarkButton/BookmarkButton.tsx","webpack://filmoteka/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.tsx","webpack://filmoteka/./src/components/Trailer/Trailer.module.scss?e876","components/Trailer/Trailer.tsx","webpack://filmoteka/./src/components/MovieInfo/MovieInfo.module.scss?18bd","components/MovieInfo/MovieInfo.tsx","pages/MovieDetails.tsx","services/moviesAPI.ts","utils/formatting.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"BackLink_link__OsH+i\"};","import { useTranslation } from 'react-i18next';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './BackLink.module.scss';\n\nconst BackLink = () => {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <Link className={styles.link} to={location.state?.from || '/'}>\n      <FaArrowLeft />\n      <span>{t('common.backLink')}</span>\n    </Link>\n  );\n};\n\nexport default BackLink;\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\nimport type { IBookmarkButtonProps } from './BookmarkButton.types';\n\nconst BookmarkButton = ({ addToBookmarks, removeFromBookMarks, isSaved }: IBookmarkButtonProps) => {\n  const { t } = useTranslation();\n\n  if (isSaved) {\n    return (\n      <Button handleClick={removeFromBookMarks}>{t('movieDetails.bookmarkBtn.remove')}</Button>\n    );\n  }\n\n  return <Button handleClick={addToBookmarks}>{t('movieDetails.bookmarkBtn.add')} </Button>;\n};\n\nBookmarkButton.propTypes = {\n  addToBookmarks: PropTypes.func.isRequired,\n  removeFromBookMarks: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default BookmarkButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"backdropVisible\":\"Modal_backdropVisible__bsZbQ\",\"modal\":\"Modal_modal__yEgVW\",\"modalVisible\":\"Modal_modalVisible__-7hOg\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.scss';\nimport type { IModalProps } from './Modal.types';\n\nconst modalRoot = document.getElementById('modal-root') as HTMLDivElement;\n\nconst Modal = ({ closeModal, children, isVisible }: IModalProps) => {\n  useEffect(() => {\n    // closing the modal window after pressing Escape\n    const handleKeyDown = (evt: KeyboardEvent): void => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const handleClick = ({ target }: Event): void => {\n      const clickedElement = target as HTMLElement;\n\n      if (clickedElement.classList.contains(styles.backdrop)) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClick);\n\n    // removing event listeners after unmounting\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <div className={`${styles.backdrop} ${isVisible ? styles.backdropVisible : ''}`}>\n      <div className={`${styles.modal} ${isVisible ? styles.modalVisible : ''}`}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Trailer_loader__TIf7n\"};","import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TailSpin } from 'react-loader-spinner';\nimport styles from './Trailer.module.scss';\nimport type { ITrailerProps } from './Trailer.types';\n\nconst Trailer = ({ movieKey, canPlay }: ITrailerProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    if (!canPlay) {\n      const iframeSrc = iframeRef.current?.src;\n      if (iframeSrc) {\n        iframeRef.current.src = iframeSrc;\n      }\n    }\n  }, [canPlay]);\n\n  const hideSpinner = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <TailSpin wrapperClass={styles.loader} ariaLabel=\"tail-spin-loading\" visible={true} />\n      )}\n      <iframe\n        ref={iframeRef}\n        id=\"player\"\n        width=\"100%\"\n        height=\"100%\"\n        src={`https://www.youtube.com/embed/${movieKey}`}\n        frameBorder=\"0\"\n        allowFullScreen\n        title=\"trailer\"\n        onLoad={hideSpinner}\n      ></iframe>\n    </>\n  );\n};\n\nTrailer.propTypes = {\n  movieKey: PropTypes.string.isRequired,\n};\n\nexport default Trailer;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__qdGM5\",\"poster\":\"MovieInfo_poster__o3Om9\",\"info\":\"MovieInfo_info__B2aDT\",\"title\":\"MovieInfo_title__JGFhj\",\"score\":\"MovieInfo_score__ULA9v\",\"genre\":\"MovieInfo_genre__1LAX7\",\"heading\":\"MovieInfo_heading__UdnJ0\",\"overview\":\"MovieInfo_overview__fAKQx\",\"date\":\"MovieInfo_date__XlMx1\",\"box\":\"MovieInfo_box__hSEkE\",\"additionalInfo\":\"MovieInfo_additionalInfo__9ZOeg\",\"links\":\"MovieInfo_links__rDs79\",\"link\":\"MovieInfo_link__kwMHd\"};","import { useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\n\nimport Button from 'components/Button';\nimport BookmarkButton from 'components/BookmarkButton';\nimport Modal from 'components/Modal';\nimport Trailer from 'components/Trailer';\nimport PageLoader from 'components/PageLoader';\n\nimport { getVideos } from 'services/moviesAPI';\nimport { IMAGE_BASE_URL } from 'utils/constants';\nimport { formatDate } from 'utils/formatting';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from 'services/localStorage';\n\nimport { AiFillStar } from 'react-icons/ai';\nimport { BsPlayCircle } from 'react-icons/bs';\nimport imagePlaceHolder from 'assets/images/image-place-holder.png';\nimport styles from './MovieInfo.module.scss';\n\nimport type { IMovieInfoProps } from './MovieInfo.types';\nimport { useQuery } from '@tanstack/react-query';\n\nconst MovieInfo = ({ movie }: IMovieInfoProps) => {\n  const { id, title, genres, overview, poster_path, release_date, vote_average } = movie;\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [movieKey, setMovieKey] = useState('');\n  const [isSaved, setIsSaved] = useState(() => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = Array.isArray(data) ? data : [];\n\n    return movies.some(movie => movie.id === id);\n  });\n\n  const location = useLocation();\n  const {\n    t,\n    i18n: { language },\n  } = useTranslation();\n\n  const fetchVideos = () => getVideos(String(id), language);\n\n  useQuery({\n    queryKey: ['videos', id, language],\n    queryFn: fetchVideos,\n    onSuccess: res => setMovieKey(res[0]?.key),\n  });\n\n  // adding a movie to the Bookmarks\n  const addToBookmarks = (): void => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = Array.isArray(data) ? data : [];\n    const newMovie = {\n      id,\n      title,\n      poster_path,\n      vote_average,\n    };\n    const newMoviest = movies.length > 0 ? [...movies, newMovie] : [newMovie];\n\n    saveDataToLocalStorage('movies', newMoviest);\n    setIsSaved(true);\n  };\n\n  // adding a movie from the Bookmarks\n  const removeFromBookMarks = (): void => {\n    const data = getDataFromLocalStorage('movies');\n    const movies = Array.isArray(data) ? data : [];\n    const filteredMovies = movies.filter(movie => movie.id !== id);\n\n    saveDataToLocalStorage('movies', [...filteredMovies]);\n    setIsSaved(false);\n  };\n\n  const toggleModal = (): void => {\n    setIsModalOpen(state => !state);\n  };\n\n  const imgUrl: string = poster_path ? IMAGE_BASE_URL + poster_path : imagePlaceHolder;\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <img className={styles.poster} src={imgUrl} alt={title} />\n        <div className={styles.info}>\n          <h1 className={styles.title}>{title}</h1>\n          <p className={styles.score}>\n            {vote_average.toFixed(1)} <AiFillStar />\n          </p>\n          <p className={styles.genre}>{genres.map(genre => genre.name).join(', ')}</p>\n          <h2 className={styles.heading}>{t('movieDetails.overview')}:</h2>\n          <p className={styles.overview}>{overview}</p>\n          <h2 className={styles.date}>\n            {t('movieDetails.releaseDate')}:<span>{formatDate(release_date)}</span>\n          </h2>\n\n          <div className={styles.box}>\n            {movieKey && (\n              <Button handleClick={toggleModal}>\n                {t('movieDetails.trailer')} <BsPlayCircle />\n              </Button>\n            )}\n            <BookmarkButton\n              isSaved={isSaved}\n              addToBookmarks={addToBookmarks}\n              removeFromBookMarks={removeFromBookMarks}\n            />\n          </div>\n\n          <Modal closeModal={toggleModal} isVisible={isModalOpen}>\n            <Trailer movieKey={movieKey} canPlay={isModalOpen} />\n          </Modal>\n        </div>\n      </div>\n      <div className={styles.additionalInfo}>\n        <h2 className={styles.heading}>{t('movieDetails.additionalInfo')}:</h2>\n        <ul className={styles.links}>\n          <li>\n            <NavLink className={styles.link} to=\"cast\" state={{ from: location.state?.from }}>\n              {t('cast.title')}\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={styles.link} to=\"reviews\" state={{ from: location.state?.from }}>\n              {t('reviews.title')}\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<PageLoader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesAPI';\nimport { useTranslation } from 'react-i18next';\n\nimport BackLink from 'components/BackLink';\nimport MovieInfo from 'components/MovieInfo';\nimport { useQuery } from '@tanstack/react-query';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const {\n    i18n: { language },\n  } = useTranslation();\n\n  const fetchDetails = async () => {\n    if (!movieId) {\n      return;\n    }\n    return getMovieDetails(movieId, language);\n  };\n\n  const { data: movie } = useQuery({\n    queryKey: ['movie', movieId, language],\n    queryFn: fetchDetails,\n    enabled: !!movieId,\n  });\n\n  return (\n    <>\n      <BackLink />\n      {movie && <MovieInfo movie={movie} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY } from 'utils/constants';\nimport type { IMovie, IGenreList, IFoundMovies, IFoundReviews, FoundCredits } from 'types';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async (language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get<IFoundMovies>('trending/movie/week', options).then(res => res.data.results);\n};\n\nexport const getGenreList = async (language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get<IGenreList>('genre/movie/list', options).then(res => res.data.genres);\n};\n\nexport const getMoviesBySearchQuery = async (query: string, language = 'en') => {\n  const options = {\n    params: { query, language },\n  };\n  return axios.get<IFoundMovies>('search/movie', options).then(res => res.data.results);\n};\n\nexport const getMoviesByGenre = async (genreId: string, language = 'en') => {\n  const options = {\n    params: {\n      with_genres: genreId,\n      sort_by: 'popularity.desc',\n      'vote_average.gte': 5,\n      'primary_release_date.gte': '2010-01-01',\n      language,\n    },\n  };\n\n  return axios.get<IFoundMovies>('discover/movie', options).then(res => res.data.results);\n};\n\nexport const getMovieDetails = async (id: string, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n\n  return axios.get<IMovie>(`movie/${id}`, options).then(res => res.data);\n};\n\nexport const getMovieCredits = async (id: string, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get<FoundCredits>(`movie/${id}/credits`, options).then(res => res.data.cast);\n};\n\nexport const getMovieReviews = async (id: string, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get<IFoundReviews>(`movie/${id}/reviews`, options).then(res => res.data.results);\n};\n\nexport const getVideos = async (id: string, language = 'en') => {\n  const options = {\n    params: { language },\n  };\n  return axios.get(`movie/${id}/videos`, options).then(res => res.data.results);\n};\n","export const formatDate = (date: string): string => {\n  const dateObj = new Date(date);\n  const formattedDate = dateObj.toLocaleDateString();\n  const dateElements = formattedDate.split('/');\n\n  return dateElements.map(el => el.padStart(2, '0')).join('.');\n};\n\nexport const cutString = (str: string): string => {\n  return str.split(' ').slice(0, 70).join(' ') + '... ';\n};\n"],"names":["location","useLocation","t","useTranslation","className","styles","to","state","from","addToBookmarks","removeFromBookMarks","isSaved","Button","handleClick","modalRoot","document","getElementById","closeModal","children","isVisible","useEffect","handleKeyDown","evt","code","target","classList","contains","window","addEventListener","removeEventListener","createPortal","movieKey","canPlay","useState","isLoading","setIsLoading","iframeRef","useRef","iframeSrc","current","src","wrapperClass","ariaLabel","visible","ref","id","width","height","frameBorder","allowFullScreen","title","onLoad","movie","genres","overview","poster_path","release_date","vote_average","isModalOpen","setIsModalOpen","setMovieKey","data","getDataFromLocalStorage","Array","isArray","some","setIsSaved","language","i18n","useQuery","queryKey","queryFn","getVideos","String","onSuccess","res","key","toggleModal","imgUrl","IMAGE_BASE_URL","imagePlaceHolder","alt","toFixed","map","genre","name","join","formatDate","movies","newMovie","newMoviest","length","saveDataToLocalStorage","filteredMovies","filter","Suspense","fallback","PageLoader","movieId","useParams","fetchDetails","getMovieDetails","enabled","axios","BASE_URL","api_key","API_KEY","getTrendingMovies","options","params","then","results","getGenreList","getMoviesBySearchQuery","query","getMoviesByGenre","genreId","with_genres","sort_by","getMovieCredits","cast","getMovieReviews","date","Date","toLocaleDateString","split","el","padStart","cutString","str","slice"],"sourceRoot":""}